#summary Application URL Routes.

The routes file defines which controller-action corresponds to a certain request, like for example, by default '/' invokes the {{{index}}} action from {{{Home}}} controller.

===Location===
{{{./nu/application/routes/}}}

===File===
{{{routes.php}}}

Nu Engine will load the routes file {{{routes.php}}} by default. You can name this differently or create a new routes class in the same directory but you will have to direct Nu Engine to load the new file by editing {{{./docroot/index.php}}}

===Class===
A class named *Routes* should be defined in your routes file, the engine will instantiate this class itself and use its properties, the instance will then be passed on to the router class for parsing.

NOTE: there must be a {{{public function initialize()}}} defined in this Class, this will be the function that will contain the Routes definitions.

===Usage of $rules===
{{{
class RouteRules extends BaseRouteRules
{
	public function initialize()
	{
		$this->addRoute(
			array(
				'url' => array(''),
				'controller' => 'Home',
				'action' => 'index',
				'methods' => array('get', 'post'),
				'cache' => true
			)
		);
		
		$this->addRoute(
			array(
				'url' => array('{controller}', '{action}'),
				'controller' => '{controller}',
				'action' => '{action}',
				'methods' => 'all'
			)
		);
	}
}
}}}

Note: once the router finds a match in the route rules with the requested URI, it will stop traversing the router rules array.

====To add a route====
Use the {{{$this->addRoute($array)}}} method, wherein the $array argument is an associative array with the following format.

|| key || sample || definition ||
|| url || array('Home', 'index') || this defines that this route is under /Home/index ||
|| controller || 'Home' || this defines that this route shall use the 'Home' Controller ||
|| action || 'index' || this defines that this route shall use the action 'index' under the defined controller ||
|| methods || array('get', 'post')/'all' || this defines what methods shall this route accept ||
|| cache || boolean || this tells the engine whether to cache this routes response or not when the caching is enabled in the configuration. ||

===Methods===
====public function `__`construct()====
  The construction function for your routes class, this is useful if you want to set route rule values dynamically.

  =====Parameters=====
  _none_

{{{#NOTHING FOLLOWS}}}